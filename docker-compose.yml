services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgrespw}
    ports:
      - ${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT:-2181}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME:-2000}
    ports:
      - ${ZOOKEEPER_CLIENT_PORT:-2181}:${ZOOKEEPER_CLIENT_PORT:-2181}
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_PORT:-9092}:${KAFKA_PORT:-9092}
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID:-1}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT:-zookeeper:2181}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS:-PLAINTEXT://kafka:9092}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:-1}
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - ${GRAFANA_PORT:-3000}:${GRAFANA_PORT:-3000}
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - ${PROMETHEUS_PORT:-9090}:${PROMETHEUS_PORT:-9090}
    volumes:
      - prometheus-config:/etc/prometheus
    entrypoint: [ "/bin/sh", "-c" ]
    command: |
      "echo 'global:
        scrape_interval: 1s
      
      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets:
                - 'localhost:${PROMETHEUS_PORT:-9090}'
      
        - job_name: 'app'
          static_configs:
            - targets:
                - 'app-server:${SERVER_PORT:-8080}'' > /etc/prometheus/prometheus.yml && /bin/prometheus --config.file=/etc/prometheus/prometheus.yml"
    restart: always

  app-server:
    container_name: app-server
    image: chazari/messaggio
    depends_on:
      - postgres
      - grafana
      - prometheus
    ports:
      - ${SERVER_PORT:-8080}:${SERVER_PORT:-8080}
    environment:
      PROMETHEUS_ADDRESS: ${PROMETHEUS_ADDRESS:-prometheus:9090}
      SERVER_HTTP: ${SERVER_HTTP:-:8080}
      DATABASE_ADDRESS: ${DATABASE_ADDRESS:-postgres://postgres:postgrespw@postgres:5432/postgres?sslmode=disable}
    command: [ "/app/main", "server" ]
    restart: always

  app-broker:
    container_name: app-broker
    image: chazari/messaggio
    depends_on:
      - app-server
      - postgres
      - kafka
    environment:
      SERVER_ADDRESS: ${SERVER_ADDRESS:-app-server:8080}
      KAFKA_ADDRESS: ${KAFKA_ADDRESS:-kafka:9092}
      DATABASE_ADDRESS: ${DATABASE_ADDRESS:-postgres://postgres:postgrespw@postgres:5432/postgres?sslmode=disable}
    command: [ "/app/main", "broker" ]
    restart: always

volumes:
  pgdata:
  kafkadata:
  prometheus-config:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs